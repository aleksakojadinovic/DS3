 > At node 3
 	with current path [3] and visited [3]
 	Checking neighbor 1
 		Neighbor not visited, going recursive.
	 > At node 1
	 	with current path [3, 1] and visited [1, 3]
	 	Checking neighbor 9
	 		Neighbor not visited, going recursive.
		 > At node 9
		 	with current path [3, 1, 9] and visited [1, 3, 9]
		 	Checking neighbor 8
		 		Neighbor not visited, going recursive.
			 > At node 8
			 	with current path [3, 1, 9, 8] and visited [1, 3, 8, 9]
			 	Checking neighbor 9
			 		Invalid move as last branch was also horizontal
			 	Checking neighbor 11
			 		Invalid move as last branch was also horizontal
		 		Back at node 9 REMINDER:  3 --> 1 --> 9
		 	Checking neighbor 1
		 		Invalid move as last branch was also vertical
		 	Checking neighbor 11
		 		Neighbor not visited, going recursive.
			 > At node 11
			 	with current path [3, 1, 9, 11] and visited [1, 3, 9, 11]
			 	Checking neighbor 8
			 		Invalid move as last branch was also horizontal
			 	Checking neighbor 9
			 		Invalid move as last branch was also horizontal
			 	Checking neighbor 3
			 		Found back edge to start node 3.
			 			Long enough!
		 		Back at node 9 REMINDER:  3 --> 1 --> 9
		 		Neighbor 11 found the path, done!
	 		Back at node 1 REMINDER:  3 --> 1
	 		Neighbor 9 found the path, done!
 		Back at node 3 REMINDER:  3
 		Neighbor 1 found the path, done!
