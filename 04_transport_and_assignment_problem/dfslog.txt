 > At node 4
 	with current path [4] and visited [4]
 	Checking neighbor 1
 		Neighbor not visited, going recursive.
	 > At node 1
	 	with current path [4, 1] and visited [1, 4]
	 	Checking neighbor 0
	 		Neighbor not visited, going recursive.
		 > At node 0
		 	with current path [4, 1, 0] and visited [0, 1, 4]
		 	Checking neighbor 1
		 		Invalid move as last branch was also horizontal
		 	Checking neighbor 3
		 		Neighbor not visited, going recursive.
			 > At node 3
			 	with current path [4, 1, 0, 3] and visited [0, 1, 3, 4]
			 	Checking neighbor 0
			 		Invalid move as last branch was also vertical
			 	Checking neighbor 4
			 		Found back edge to start node 4.
			 			Long enough!
		 		Back at node 0 REMINDER:  4 --> 1 --> 0
		 		Neighbor 3 found the path, done!
	 		Back at node 1 REMINDER:  4 --> 1
	 		Neighbor 0 found the path, done!
 		Back at node 4 REMINDER:  4
 		Neighbor 1 found the path, done!
